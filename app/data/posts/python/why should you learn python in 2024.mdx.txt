---
title: "Perché dovresti imparare Python nel 2024?"
date: "2024-08-01"
tags: ["python"]
draft: false
summary: Python può essere utilizzato per l'ethical hacking, l'intelligenza artificiale, l'automazione, lo sviluppo web e tanto altro. Scopriamo perchè è diventato così popolare.
images: ["/images/python/python_card.png"]
---

![Engsitter for Python](/images/python/python_card.png)

## Introduzione al linguaggio

Python è un **linguaggio di programmazine general-purpose**. Le sue caratteristiche lo rendono ideale per
tantissimi ambiti di utilizzo. In primis, è **multipiattaforma**. Possiamo eseguire script Python sui più
famosi sistemi operativi in circolazione, quali Windows, MacOS e le varie distribuzioni di Linux. In
secondo luogo, ha una **standard library ricchissima**. Moltissime delle operazioni che un programmatore
effettua quotidianamente sono già previste nativamente dal linguaggio.

Uno dei punti di forza di questo linguaggio è **la sua semplicità**. Servono solo pochi giorni per prendere
dimestichezza con il lignuaggio e creare i primi script da eseguire. Sebbene il linguaggio sia **object-oriented**,
la sua sintassi è più semplice rispetto ai più classici Java o C++. Per di più, Python fornisce un **livello di
astrazione decisamente alto**, il che lo rende adatto ai neofiti del mondo della programmazione.

Il rovesco della medaglia è che Python, essendo un **lignuaggio interpretato**, offre prestazioni sicuramente
minori dei linguaggi compilati. Fortuna vuole che, per le applicazioni in ambito networking e cybersecurity,
questo non costituisca un ostacolo. Con queste premesse, passiamo a vedere quali sono gli aspetti del linguaggio
su cui ci focalizzeremo e come possano aiutare ad accrescere le proprie skills tecniche.

## Gli aspetti di Python su cui ci focalizzeremo

Inizieremo lo studio di Python con una sua introduzione più approfondita, per poi passare a prendere familiarità
con **l'interprete nativo** che ci permetterà di impartire comandi da terminale in maniera facile e veloce. Subito
dopo, ci immergeremo nella **sintassi del linugaggio** e studieremo come Python supporta la programmazione
object-oriented. Dopo aver consolidato questi concetti, vedremo cosa sono le **type annotations** in Python, come esso
gestisce le **eccezioni** e la differenza tra **moduli e package**. Daremo uno sguardo ai principali moduli che
caratterizzano la **standard library** di Python, analizzeremo la **gestione delle stringhe**, la definizione delle
**regular expression**, le **operazioni numeriche e su file**. Studieremo, poi, concetti un po' più avanzati come
la **gestione della concorrezza** (thread e processi) e capiremo come **testare, effettuare debugging e ottimizzare
codice scritto in Python**. Un parte importante dei contenuti si focalizzerà uslle applicazioni di Python in ambito
**networking e programmazione web**. Infine, capiremo come **estendere le funzionalità del linguaggio** e caleremo
Python nel contesto dell'ethical hacking, studiando e scrivendo **script per le operazioni di penetration testing**.

## La forza di Python è la sua duttilità

Python è diffusissimo. Come riporta [TIOBE][], è **il linguaggio di programmazione più popolare del momento**.
Ma cosa lo rende così speciale? Credo che una delle risposte migliori a questa domanda sia che Python è
adatto ad ogni tipo di contesto. Con Python è possibile creare **script di automazione** con grande facilità,
per rendere le azioni quotidiane o periodiche molto più semplici. I casi d'uso non si fermano qui. Nel corso
degli anni, i **framework di programmazione web** sono diventati molto diffusi, tra questi vanno sicuramente
citati [Flask][] e [Django][]. Per non parlare poi dell'impennata che ha avuto con l'esplosione dell'AI...
Tra le librerie più famose per il **machine learning** troviamo sicuramente [TensorFlow][], [Keras][], [PyTorch][]
e [Scikit-Learn][]. Per ultimo ma non per importanta, non è possibile non citare **l'utilizzo di Python per
l'ethical hacking**. Ne abbiamo riprova effettuando un [ricerca su Github][GH_H] con la keyword _hacking_.

![Ricerca Github per la parola chiave "hacking"](/images/python/why-should-you-learn-python-in-2024/Github-search-hacking.png)

Come è possibile notare nello screenshot, la ricerca restituisce circa 140k repositories. [Filtrando i risultati][GH_H_P]
per il linugaggio Python, ci rendiamo subito conto che, dei 140k repositories originari, **20.6k di questi
afferiscono a Python**.

![Ricerca Github per la parola chiave "hacking" con filtro sul linguaggio "Python"](/images/python/why-should-you-learn-python-in-2024/Github-search-hacking-python.png)

Penso sia chiaro oramai che studiare Python nel 2024 possa aprire tante porte e sbocchi lavorativi.
Rimanete sintonizzati perchè stanno per arrivare un marea di contenuti. A presto!

[Django]: https://www.djangoproject.com/
[Flask]: https://flask.palletsprojects.com/en/3.0.x/
[GH_H]: https://github.com/search?q=hacking&type=repositories
[GH_H_P]: https://github.com/search?q=hacking+language%3APython&type=repositories&l=Python
[Keras]: https://keras.io/
[PyTorch]: https://pytorch.org/
[Scikit-Learn]: https://scikit-learn.org/stable/
[TensorFlow]: https://www.tensorflow.org/
[TIOBE]: https://www.tiobe.com/tiobe-index/
